contract Hireme =
  record detail ={
    id:int,
    name:string,
    description:string,
    createdAt:int,
    updatedAt:int,
    jobdate:int,
    created_by:address,
    jobsalary:int}

  record state ={
    index_counter:int,
    details:map(int,detail)}
      
  entrypoint init()={
    index_counter=0,
    details={}}
    
  entrypoint getjobLength():int=
    state.index_counter

  entrypoint get_job_by_index(index:int) : detail = 
    switch(Map.lookup(index, state.details))
      None => abort("Jobs does not exist with this index")
      Some(x) => x  

  stateful entrypoint add_job(_name:string,_description:string,jobdate:int, jobsalary:int) =
   let stored_job = {id=getjobLength() + 1,name=_name,description=_description, createdAt=Chain.timestamp,updatedAt=Chain.timestamp,created_by = Call.caller,jobdate=jobdate, jobsalary=jobsalary}
   let index = getjobLength() + 1
   put(state{details[index]=stored_job,index_counter=index})
  